
.red-text {
  color: $red !important;
  font-weight: bold;
}

.PC {
  display: none;
  @include min-screen($break_point_max) {
    display: block;
  }
}
.SP {
  display: block;
  @include min-screen($break_point_max) {
    display: none;
  }
}

.SP-br { //スマホのみ
  @include min-screen($break_point_max) {
    display: none;
  }
}
.TB-br { //タブレットのみ
  @include max-screen($break_point_max) {
    display: none;
  }
  @include min-screen($break_point_min) {
    display: none;
  }
}
.PC-br { //タブレット以上
  @include max-screen($break_point_max) {
    display: none;
  }
}

.display-f {
  margin-bottom: 60px;
  @include min-screen($break_point_max) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
  }
  .page-kotei-fristbox {
    width: calc(50% - 10px);
    margin: 0px auto;
  }
}

.display-f-sp {
  margin-bottom: 30px;
  @include max-screen($break_point_max) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    margin-bottom: 50px;
  }
}

// padding関係
.pd-top {
  padding-top:50px !important;
    @include min-screen($break_point_max) {
      padding-top:50px !important;
    }
}
.pd-btm {
  padding-bottom:50px !important;
    @include min-screen($break_point_max) {
      padding-bottom:50px !important;
    }
}
// margin関係
.mg-top {
  margin-top:50px !important;
    @include min-screen($break_point_max) {
      margin-top:50px !important;
    }
}
.mg-btm {
  margin-bottom:50px !important;
    @include min-screen($break_point_max) {
      margin-bottom:50px !important;
    }
}

// ページ共通 > 紙 > 縦幅
.page-index__text,
.top-shoukai-inner,
.top-blog-inner,
.page-kodawari,
.page-menu{
	margin-top: 60px !important;
		@include min-screen($break_point_max) {
			margin-top: 50px !important;
		}
}

.page-introduction,
.page-blog,
.page-access,
.page-faq{
	margin-top: 30px !important;
		@include min-screen($break_point_max) {
			margin-top: 50px !important;
		}
}


ul,ol {
  padding: 0;
}

html {
  margin: 0 !important;
	box-sizing: border-box;
}

*,
*:before,
*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
	box-sizing: border-box;
}

body {
	background: url(../images/board-bg4.png) repeat;
  background-position: 40% 20%;
  // 『 焼印カラー 』
  color: $board_text__color;
  margin: 0;
  padding: 0;

}

.bgc {
  position: relative;
  background-color: $bg-brown;
  &__icon {

    top: 8px;
    left: 50%;
    width: 60px;
    height: 60px;
    z-index: 111111;

    @include max-screen($break_point_max) {
      position: absolute;
      transform: translateX(-50%);
    }  
    @include min-screen($break_point_max) {
      position: fixed;
      top: 15px;
      left: 8px;
      width: 45px;
      height: 45px;
    }
    @include min-screen($break_point_pc) {
      position: fixed;
      top: 15px;
      left: 20px;
      width: 60px;
      height: 60px;
    }  
    p {
      display: none;
      @include min-screen($break_point_max) {
        display: block;
        color: $inkblack;
        font-size: 12px;
        font-weight: bold;
        text-align: center;
        line-height: 1.3;
      }
      @include min-screen($break_point_pc) {
        font-size: 14px;
      }  
    }
  }
}


blockquote, q {
	quotes: "" "";

	&:before,
	&:after {
		content: "";
	}
}

hr {
	background-color: $color__background-hr;
	border: 0;
	height: 1px;
	margin-bottom: 1.5em;
}

img {
  display: inline-block;
	height: auto; /* Make sure images are scaled correctly. */
	max-width: 100%; /* Adhere to container width. */
	width: 100%;
	vertical-align: middle;
	@include min-screen($break_point_min) {
    width: auto;
  }
}

figure {
	margin: 1em 0; /* Extra wide images within figure tags don't overflow the content area. */
}

a {
  // 『 焼印カラー 』
  color: $board_text__color;
  text-decoration: underline;

	&:visited {
		color: inherit;
	}
	&:hover,
	&:focus,
	&:active {
		color: $color__link-hover;
	}
	&:focus {
		outline: none;
	}
	&:hover,
	&:active {
		outline: 0;
	}
  &:hover {
    // opacity: 0.8;
  }
}

body,
button,
input,
select,
textarea {
  color: $color__text-main;
  font-family: $font__main_2;
  font-size: 15px;
  line-height: $font__line-height-body;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 2;
  @include min-screen($break_point_min) {
    font-size: 17px;
  }
}

h1, h2, h3, h4, h5, h6 {
  clear: both;
  margin: 0;
}

a {
  text-decoration: none;
}

p {
  font-family: $font__main_2;
  color: $inkblack;
  font-size: 15px;
  margin: 0;
  @include min-screen($break_point_max) {
    font-size: 17px;
  }
}

dfn, cite, em, i {
  font-style: italic;
}

blockquote {
  margin: 0 1.5em;
}

address {
  margin: 0 0 1.5em;
}

pre {
  background: $color__background-pre;
  font-family: $font__pre;
  @include font-size(0.9375);
  line-height: $font__line-height-pre;
  margin-bottom: 1.6em;
  max-width: 100%;
  overflow: auto;
  padding: 1.6em;
}

code, kbd, tt, var {
  font-family: $font__code;
  @include font-size(0.9375);
}

abbr, acronym {
  border-bottom: 1px dotted $color__border-abbr;
  cursor: help;
}

mark, ins {
  background: $color__background-ins;
  text-decoration: none;
}

big {
  font-size: 125%;
}

.montserrat {
  font-family: $montserrat;
}

li {
  list-style: none;
}